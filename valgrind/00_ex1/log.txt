==17051== Memcheck, a memory error detector
==17051== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17051== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==17051== Command: ./main_debug
==17051== Parent PID: 8851
==17051== 
--17051-- 
--17051-- Valgrind options:
--17051--    -v
--17051--    --tool=memcheck
--17051--    --leak-check=yes
--17051--    --show-reachable=yes
--17051--    --num-callers=20
--17051--    --track-fds=yes
--17051--    --log-file=log.txt
--17051-- Contents of /proc/version:
--17051--   Linux version 5.3.0-62-generic (buildd@lcy01-amd64-004) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #56~18.04.1-Ubuntu SMP Wed Jun 24 16:17:03 UTC 2020
--17051-- 
--17051-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--17051-- Page sizes: currently 4096, max supported 4096
--17051-- Valgrind library directory: /usr/lib/valgrind
--17051-- Reading syms from /home/babak/Codes/Learning/valgrind/00_ex1/main_debug
--17051-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--17051--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--17051--   .. CRC mismatch (computed ac9397f6 wanted d0d82632)
--17051--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--17051--   .. CRC is valid
--17051-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--17051--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--17051--   .. CRC mismatch (computed 41ddb025 wanted 9972f546)
--17051--    object doesn't have a symbol table
--17051--    object doesn't have a dynamic symbol table
--17051-- Scheduler: using generic scheduler lock implementation.
--17051-- Reading suppressions file: /usr/lib/valgrind/default.supp
==17051== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-17051-by-babak-on-???
==17051== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-17051-by-babak-on-???
==17051== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-17051-by-babak-on-???
==17051== 
==17051== TO CONTROL THIS PROCESS USING vgdb (which you probably
==17051== don't want to do, unless you know exactly what you're doing,
==17051== or are doing some strange experiment):
==17051==   /usr/lib/valgrind/../../bin/vgdb --pid=17051 ...command...
==17051== 
==17051== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==17051==   /path/to/gdb ./main_debug
==17051== and then give GDB the following command
==17051==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=17051
==17051== --pid is optional if only one valgrind process is running
==17051== 
--17051-- REDIR: 0x401f320 (ld-linux-x86-64.so.2:strlen) redirected to 0x580608c1 (???)
--17051-- REDIR: 0x401f100 (ld-linux-x86-64.so.2:index) redirected to 0x580608db (???)
--17051-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--17051--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--17051--   .. CRC mismatch (computed 50df1b30 wanted 4800a4cf)
--17051--    object doesn't have a symbol table
--17051-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--17051--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--17051--   .. CRC mismatch (computed f893b962 wanted 95ee359e)
--17051--    object doesn't have a symbol table
==17051== WARNING: new redirection conflicts with existing -- ignoring it
--17051--     old: 0x0401f320 (strlen              ) R-> (0000.0) 0x580608c1 ???
--17051--     new: 0x0401f320 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--17051-- REDIR: 0x401d390 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--17051-- REDIR: 0x401f860 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--17051-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--17051--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--17051--   .. CRC mismatch (computed c2c067b2 wanted d73adc7f)
--17051--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--17051--   .. CRC is valid
--17051-- REDIR: 0x4edace0 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9db0 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edafc0 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9800 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9de0 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edc830 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edae50 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edac80 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9d70 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9870 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edadb0 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ef8160 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9d10 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed98e0 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edb010 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed98b0 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edb150 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9e10 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9830 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ed9ce0 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ee4730 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edb060 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edac50 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4ef8f20 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4eda0c0 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edaf90 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edaf60 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edc860 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4edb0b0 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--17051-- REDIR: 0x4fca630 (libc.so.6:__strrchr_avx2) redirected to 0x4c32730 (rindex)
--17051-- REDIR: 0x4fca800 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--17051-- REDIR: 0x4ed30e0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
==17051== Invalid write of size 4
==17051==    at 0x108723: f() (main.cpp:13)
==17051==    by 0x108790: main (main.cpp:28)
==17051==  Address 0x522d4a8 is 0 bytes after a block of size 40 alloc'd
==17051==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17051==    by 0x108709: f() (main.cpp:8)
==17051==    by 0x108790: main (main.cpp:28)
==17051== 
==17051== Invalid write of size 4
==17051==    at 0x10872A: f() (main.cpp:13)
==17051==    by 0x108790: main (main.cpp:28)
==17051==  Address 0x522d4ac is 4 bytes after a block of size 40 alloc'd
==17051==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17051==    by 0x108709: f() (main.cpp:8)
==17051==    by 0x108790: main (main.cpp:28)
==17051== 
--17051-- REDIR: 0x4fcad20 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x4c37130 (mempcpy)
--17051-- REDIR: 0x4fca440 (libc.so.6:__strchrnul_avx2) redirected to 0x4c37020 (strchrnul)
==17051== Invalid read of size 4
==17051==    at 0x10874A: f() (main.cpp:18)
==17051==    by 0x108790: main (main.cpp:28)
==17051==  Address 0x522d4a8 is 0 bytes after a block of size 40 alloc'd
==17051==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17051==    by 0x108709: f() (main.cpp:8)
==17051==    by 0x108790: main (main.cpp:28)
==17051== 
--17051-- REDIR: 0x4ed39c0 (libc.so.6:free) redirected to 0x4c30cd0 (free)
==17051== 
==17051== FILE DESCRIPTORS: 4 open at exit.
==17051== Open file descriptor 3: /home/babak/Codes/Learning/valgrind/00_ex1/log.txt
==17051==    <inherited from parent>
==17051== 
==17051== Open file descriptor 2: /dev/pts/0
==17051==    <inherited from parent>
==17051== 
==17051== Open file descriptor 1: /dev/pts/0
==17051==    <inherited from parent>
==17051== 
==17051== Open file descriptor 0: /dev/pts/0
==17051==    <inherited from parent>
==17051== 
==17051== 
==17051== HEAP SUMMARY:
==17051==     in use at exit: 40 bytes in 1 blocks
==17051==   total heap usage: 2 allocs, 1 frees, 1,064 bytes allocated
==17051== 
==17051== Searching for pointers to 1 not-freed blocks
==17051== Checked 70,376 bytes
==17051== 
==17051== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==17051==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17051==    by 0x108709: f() (main.cpp:8)
==17051==    by 0x108790: main (main.cpp:28)
==17051== 
==17051== LEAK SUMMARY:
==17051==    definitely lost: 40 bytes in 1 blocks
==17051==    indirectly lost: 0 bytes in 0 blocks
==17051==      possibly lost: 0 bytes in 0 blocks
==17051==    still reachable: 0 bytes in 0 blocks
==17051==         suppressed: 0 bytes in 0 blocks
==17051== 
==17051== ERROR SUMMARY: 5 errors from 4 contexts (suppressed: 0 from 0)
==17051== 
==17051== 1 errors in context 1 of 4:
==17051== Invalid write of size 4
==17051==    at 0x10872A: f() (main.cpp:13)
==17051==    by 0x108790: main (main.cpp:28)
==17051==  Address 0x522d4ac is 4 bytes after a block of size 40 alloc'd
==17051==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17051==    by 0x108709: f() (main.cpp:8)
==17051==    by 0x108790: main (main.cpp:28)
==17051== 
==17051== 
==17051== 1 errors in context 2 of 4:
==17051== Invalid write of size 4
==17051==    at 0x108723: f() (main.cpp:13)
==17051==    by 0x108790: main (main.cpp:28)
==17051==  Address 0x522d4a8 is 0 bytes after a block of size 40 alloc'd
==17051==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17051==    by 0x108709: f() (main.cpp:8)
==17051==    by 0x108790: main (main.cpp:28)
==17051== 
==17051== 
==17051== 2 errors in context 3 of 4:
==17051== Invalid read of size 4
==17051==    at 0x10874A: f() (main.cpp:18)
==17051==    by 0x108790: main (main.cpp:28)
==17051==  Address 0x522d4a8 is 0 bytes after a block of size 40 alloc'd
==17051==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17051==    by 0x108709: f() (main.cpp:8)
==17051==    by 0x108790: main (main.cpp:28)
==17051== 
==17051== ERROR SUMMARY: 5 errors from 4 contexts (suppressed: 0 from 0)
