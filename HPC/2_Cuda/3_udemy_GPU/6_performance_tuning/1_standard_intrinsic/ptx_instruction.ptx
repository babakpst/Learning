//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33281558
// Cuda compilation tools, release 12.3, V12.3.52
// Based on NVVM 7.0.1
//

.version 8.3
.target sm_52
.address_size 64

	// .globl	_Z8standardPf

.visible .entry _Z8standardPf(
	.param .u64 _Z8standardPf_param_0
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<84>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd2, [_Z8standardPf_param_0];
	cvta.to.global.u64 	%rd1, %rd2;
	mov.f32 	%f83, 0f3F800000;
	cvt.rzi.f32.f32 	%f10, %f83;
	add.f32 	%f11, %f10, %f10;
	mov.f32 	%f12, 0f40000000;
	sub.f32 	%f13, %f12, %f11;
	abs.f32 	%f1, %f13;
	ld.global.f32 	%f2, [%rd1];
	abs.f32 	%f3, %f2;
	setp.lt.f32 	%p1, %f3, 0f00800000;
	mul.f32 	%f14, %f3, 0f4B800000;
	selp.f32 	%f15, %f14, %f3, %p1;
	selp.f32 	%f16, 0fC1C00000, 0f00000000, %p1;
	mov.b32 	%r1, %f15;
	add.s32 	%r2, %r1, -1060439283;
	and.b32  	%r3, %r2, -8388608;
	sub.s32 	%r4, %r1, %r3;
	mov.b32 	%f17, %r4;
	cvt.rn.f32.s32 	%f18, %r3;
	mov.f32 	%f19, 0f34000000;
	fma.rn.f32 	%f20, %f18, %f19, %f16;
	add.f32 	%f21, %f17, 0fBF800000;
	add.f32 	%f22, %f17, 0f3F800000;
	rcp.approx.ftz.f32 	%f23, %f22;
	add.f32 	%f24, %f21, %f21;
	mul.f32 	%f25, %f24, %f23;
	mul.f32 	%f26, %f25, %f25;
	sub.f32 	%f27, %f21, %f25;
	add.f32 	%f28, %f27, %f27;
	neg.f32 	%f29, %f25;
	fma.rn.f32 	%f30, %f29, %f21, %f28;
	mul.rn.f32 	%f31, %f23, %f30;
	mov.f32 	%f32, 0f3B52E7DB;
	mov.f32 	%f33, 0f3A2C32E4;
	fma.rn.f32 	%f34, %f33, %f26, %f32;
	mov.f32 	%f35, 0f3C93BB73;
	fma.rn.f32 	%f36, %f34, %f26, %f35;
	mov.f32 	%f37, 0f3DF6384F;
	fma.rn.f32 	%f38, %f36, %f26, %f37;
	mul.rn.f32 	%f39, %f38, %f26;
	mov.f32 	%f40, 0f3FB8AA3B;
	fma.rn.f32 	%f41, %f25, %f40, %f20;
	sub.f32 	%f42, %f20, %f41;
	fma.rn.f32 	%f43, %f25, %f40, %f42;
	fma.rn.f32 	%f44, %f31, %f40, %f43;
	mov.f32 	%f45, 0f32A55E34;
	fma.rn.f32 	%f46, %f25, %f45, %f44;
	mul.f32 	%f47, %f39, 0f40400000;
	fma.rn.f32 	%f48, %f47, %f31, %f46;
	fma.rn.f32 	%f49, %f39, %f25, %f48;
	add.rn.f32 	%f50, %f41, %f49;
	neg.f32 	%f51, %f41;
	add.rn.f32 	%f52, %f50, %f51;
	neg.f32 	%f53, %f52;
	add.rn.f32 	%f54, %f49, %f53;
	mul.rn.f32 	%f55, %f50, %f12;
	neg.f32 	%f56, %f55;
	fma.rn.f32 	%f57, %f50, %f12, %f56;
	fma.rn.f32 	%f58, %f54, %f12, %f57;
	cvt.rni.f32.f32 	%f59, %f55;
	sub.f32 	%f60, %f55, %f59;
	add.f32 	%f61, %f58, %f60;
	mov.f32 	%f62, 0f3AAF85ED;
	mov.f32 	%f63, 0f391FCB8E;
	fma.rn.f32 	%f64, %f63, %f61, %f62;
	mov.f32 	%f65, 0f3C1D9856;
	fma.rn.f32 	%f66, %f64, %f61, %f65;
	mov.f32 	%f67, 0f3D6357BB;
	fma.rn.f32 	%f68, %f66, %f61, %f67;
	mov.f32 	%f69, 0f3E75FDEC;
	fma.rn.f32 	%f70, %f68, %f61, %f69;
	mov.f32 	%f71, 0f3F317218;
	fma.rn.f32 	%f72, %f70, %f61, %f71;
	fma.rn.f32 	%f73, %f72, %f61, %f83;
	cvt.rzi.s32.f32 	%r5, %f59;
	setp.gt.f32 	%p2, %f59, 0f00000000;
	selp.b32 	%r6, 0, -2097152000, %p2;
	add.s32 	%r7, %r6, 2130706432;
	mov.b32 	%f74, %r7;
	mul.f32 	%f75, %f73, %f74;
	shl.b32 	%r8, %r5, 23;
	sub.s32 	%r9, %r8, %r6;
	mov.b32 	%f76, %r9;
	mul.f32 	%f77, %f75, %f76;
	abs.f32 	%f78, %f55;
	setp.gt.f32 	%p3, %f78, 0f43180000;
	setp.lt.f32 	%p4, %f55, 0f00000000;
	selp.f32 	%f79, 0f00000000, 0f7F800000, %p4;
	selp.f32 	%f4, %f79, %f77, %p3;
	setp.eq.f32 	%p5, %f2, 0f3F800000;
	@%p5 bra 	$L__BB0_7;

	setp.gtu.f32 	%p6, %f3, 0f7F800000;
	@%p6 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_2;

$L__BB0_6:
	mov.f32 	%f82, 0f40000000;
	add.rn.f32 	%f83, %f2, %f82;
	bra.uni 	$L__BB0_7;

$L__BB0_2:
	setp.eq.f32 	%p7, %f2, 0f00000000;
	setp.eq.f32 	%p8, %f3, 0f7F800000;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_3;

$L__BB0_5:
	setp.eq.f32 	%p12, %f1, 0f3F800000;
	add.f32 	%f81, %f2, %f2;
	mov.b32 	%r10, %f81;
	and.b32  	%r11, %r10, 2147483647;
	selp.b32 	%r12, %r10, %r11, %p12;
	mov.b32 	%f83, %r12;
	bra.uni 	$L__BB0_7;

$L__BB0_3:
	setp.geu.f32 	%p10, %f2, 0f00000000;
	mov.f32 	%f83, %f4;
	@%p10 bra 	$L__BB0_7;

	setp.eq.f32 	%p11, %f1, 0f3F800000;
	neg.f32 	%f80, %f4;
	selp.f32 	%f83, %f80, %f4, %p11;

$L__BB0_7:
	st.global.f32 	[%rd1], %f83;
	ret;

}
	// .globl	_Z9intrinsicPf
.visible .entry _Z9intrinsicPf(
	.param .u64 _Z9intrinsicPf_param_0
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z9intrinsicPf_param_0];
	cvta.to.global.u64 	%rd2, %rd1;
	ld.global.f32 	%f1, [%rd2];
	lg2.approx.f32 	%f2, %f1;
	add.f32 	%f3, %f2, %f2;
	ex2.approx.f32 	%f4, %f3;
	st.global.f32 	[%rd2], %f4;
	ret;

}

