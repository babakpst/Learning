//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z8standardPf

.visible .entry _Z8standardPf(
	.param .u64 _Z8standardPf_param_0
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<101>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd2, [_Z8standardPf_param_0];
	cvta.to.global.u64 	%rd1, %rd2;
	mov.f32 	%f17, 0f3F800000;
	cvt.rzi.f32.f32	%f18, %f17;
	add.f32 	%f19, %f18, %f18;
	mov.f32 	%f20, 0f40000000;
	sub.f32 	%f21, %f20, %f19;
	abs.f32 	%f1, %f21;
	ld.global.f32 	%f2, [%rd1];
	abs.f32 	%f3, %f2;
	setp.lt.f32	%p2, %f3, 0f00800000;
	mul.f32 	%f22, %f3, 0f4B800000;
	selp.f32	%f23, 0fC3170000, 0fC2FE0000, %p2;
	selp.f32	%f24, %f22, %f3, %p2;
	mov.b32 	 %r1, %f24;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f25, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f26, %r4;
	add.f32 	%f27, %f23, %f26;
	setp.gt.f32	%p3, %f25, 0f3FB504F3;
	mul.f32 	%f28, %f25, 0f3F000000;
	add.f32 	%f29, %f27, 0f3F800000;
	selp.f32	%f30, %f28, %f25, %p3;
	selp.f32	%f31, %f29, %f27, %p3;
	add.f32 	%f32, %f30, 0fBF800000;
	add.f32 	%f16, %f30, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f15,%f16;
	// inline asm
	add.f32 	%f33, %f32, %f32;
	mul.f32 	%f34, %f15, %f33;
	mul.f32 	%f35, %f34, %f34;
	mov.f32 	%f36, 0f3C4CAF63;
	mov.f32 	%f37, 0f3B18F0FE;
	fma.rn.f32 	%f38, %f37, %f35, %f36;
	mov.f32 	%f39, 0f3DAAAABD;
	fma.rn.f32 	%f40, %f38, %f35, %f39;
	mul.rn.f32 	%f41, %f40, %f35;
	mul.rn.f32 	%f42, %f41, %f34;
	sub.f32 	%f43, %f32, %f34;
	neg.f32 	%f44, %f34;
	add.f32 	%f45, %f43, %f43;
	fma.rn.f32 	%f46, %f44, %f32, %f45;
	mul.rn.f32 	%f47, %f15, %f46;
	add.f32 	%f48, %f42, %f34;
	sub.f32 	%f49, %f34, %f48;
	add.f32 	%f50, %f42, %f49;
	add.f32 	%f51, %f47, %f50;
	add.f32 	%f52, %f48, %f51;
	sub.f32 	%f53, %f48, %f52;
	add.f32 	%f54, %f51, %f53;
	mov.f32 	%f55, 0f3F317200;
	mul.rn.f32 	%f56, %f31, %f55;
	mov.f32 	%f57, 0f35BFBE8E;
	mul.rn.f32 	%f58, %f31, %f57;
	add.f32 	%f59, %f56, %f52;
	sub.f32 	%f60, %f56, %f59;
	add.f32 	%f61, %f52, %f60;
	add.f32 	%f62, %f54, %f61;
	add.f32 	%f63, %f58, %f62;
	add.f32 	%f64, %f59, %f63;
	sub.f32 	%f65, %f59, %f64;
	add.f32 	%f66, %f63, %f65;
	mul.rn.f32 	%f67, %f20, %f64;
	neg.f32 	%f68, %f67;
	fma.rn.f32 	%f69, %f20, %f64, %f68;
	fma.rn.f32 	%f70, %f20, %f66, %f69;
	mov.f32 	%f71, 0f00000000;
	fma.rn.f32 	%f72, %f71, %f64, %f70;
	add.rn.f32 	%f73, %f67, %f72;
	neg.f32 	%f74, %f73;
	add.rn.f32 	%f75, %f67, %f74;
	add.rn.f32 	%f76, %f75, %f72;
	mov.b32 	 %r5, %f73;
	setp.eq.s32	%p4, %r5, 1118925336;
	add.s32 	%r6, %r5, -1;
	mov.b32 	 %f77, %r6;
	add.f32 	%f78, %f76, 0f37000000;
	selp.f32	%f79, %f77, %f73, %p4;
	selp.f32	%f4, %f78, %f76, %p4;
	mul.f32 	%f80, %f79, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f81, %f80;
	mov.f32 	%f82, 0fBF317200;
	fma.rn.f32 	%f83, %f81, %f82, %f79;
	mov.f32 	%f84, 0fB5BFBE8E;
	fma.rn.f32 	%f85, %f81, %f84, %f83;
	mul.f32 	%f86, %f85, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f87, %f86;
	add.f32 	%f88, %f81, 0f00000000;
	ex2.approx.f32 	%f89, %f88;
	mul.f32 	%f90, %f87, %f89;
	setp.lt.f32	%p5, %f79, 0fC2D20000;
	selp.f32	%f91, 0f00000000, %f90, %p5;
	setp.gt.f32	%p6, %f79, 0f42D20000;
	selp.f32	%f98, 0f7F800000, %f91, %p6;
	setp.eq.f32	%p7, %f98, 0f7F800000;
	@%p7 bra 	BB0_2;

	fma.rn.f32 	%f98, %f98, %f4, %f98;

BB0_2:
	setp.lt.f32	%p8, %f2, 0f00000000;
	setp.eq.f32	%p9, %f1, 0f3F800000;
	and.pred  	%p1, %p8, %p9;
	mov.b32 	 %r7, %f98;
	xor.b32  	%r8, %r7, -2147483648;
	mov.b32 	 %f92, %r8;
	selp.f32	%f100, %f92, %f98, %p1;
	setp.eq.f32	%p10, %f2, 0f00000000;
	@%p10 bra 	BB0_5;
	bra.uni 	BB0_3;

BB0_5:
	add.f32 	%f95, %f2, %f2;
	selp.f32	%f100, %f95, 0f00000000, %p9;
	bra.uni 	BB0_6;

BB0_3:
	setp.geu.f32	%p11, %f2, 0f00000000;
	@%p11 bra 	BB0_6;

	cvt.rzi.f32.f32	%f94, %f20;
	setp.neu.f32	%p12, %f94, 0f40000000;
	selp.f32	%f100, 0f7FFFFFFF, %f100, %p12;

BB0_6:
	add.f32 	%f96, %f3, 0f40000000;
	mov.b32 	 %r9, %f96;
	setp.lt.s32	%p14, %r9, 2139095040;
	@%p14 bra 	BB0_11;

	setp.gtu.f32	%p15, %f3, 0f7F800000;
	@%p15 bra 	BB0_10;
	bra.uni 	BB0_8;

BB0_10:
	add.f32 	%f100, %f2, 0f40000000;
	bra.uni 	BB0_11;

BB0_8:
	setp.neu.f32	%p16, %f3, 0f7F800000;
	@%p16 bra 	BB0_11;

	selp.f32	%f100, 0fFF800000, 0f7F800000, %p1;

BB0_11:
	setp.eq.f32	%p17, %f2, 0f3F800000;
	selp.f32	%f97, 0f3F800000, %f100, %p17;
	st.global.f32 	[%rd1], %f97;
	ret;
}

	// .globl	_Z9intrinsicPf
.visible .entry _Z9intrinsicPf(
	.param .u64 _Z9intrinsicPf_param_0
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z9intrinsicPf_param_0];
	cvta.to.global.u64 	%rd2, %rd1;
	ld.global.f32 	%f1, [%rd2];
	lg2.approx.f32 	%f2, %f1;
	add.f32 	%f3, %f2, %f2;
	ex2.approx.f32 	%f4, %f3;
	st.global.f32 	[%rd2], %f4;
	ret;
}


