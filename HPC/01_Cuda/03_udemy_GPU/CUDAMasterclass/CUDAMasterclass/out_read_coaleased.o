//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z19matrix_transpose_k1PfS_ii

.visible .entry _Z19matrix_transpose_k1PfS_ii(
	.param .u64 _Z19matrix_transpose_k1PfS_ii_param_0,
	.param .u64 _Z19matrix_transpose_k1PfS_ii_param_1,
	.param .u32 _Z19matrix_transpose_k1PfS_ii_param_2,
	.param .u32 _Z19matrix_transpose_k1PfS_ii_param_3
)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z19matrix_transpose_k1PfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z19matrix_transpose_k1PfS_ii_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mad.lo.s32 	%r5, %r3, %r1, %r2;
	mul.wide.u32 	%rd5, %r5, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.wide.s32 	%rd7, %r4, 4;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.f32 	[%rd8], %f1;
	ret;
}

	// .globl	_Z9copy_rowsPfS_ii
.visible .entry _Z9copy_rowsPfS_ii(
	.param .u64 _Z9copy_rowsPfS_ii_param_0,
	.param .u64 _Z9copy_rowsPfS_ii_param_1,
	.param .u32 _Z9copy_rowsPfS_ii_param_2,
	.param .u32 _Z9copy_rowsPfS_ii_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z9copy_rowsPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z9copy_rowsPfS_ii_param_1];
	ld.param.u32 	%r3, [_Z9copy_rowsPfS_ii_param_2];
	ld.param.u32 	%r4, [_Z9copy_rowsPfS_ii_param_3];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.lt.s32	%p1, %r1, %r3;
	setp.lt.s32	%p2, %r2, %r4;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB1_2;
	bra.uni 	BB1_1;

BB1_1:
	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r11, %r2, %r3, %r1;
	mul.wide.s32 	%rd4, %r11, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mad.lo.s32 	%r12, %r2, %r4, %r1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r12, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

BB1_2:
	ret;
}

	// .globl	_Z12copy_columnsPfS_ii
.visible .entry _Z12copy_columnsPfS_ii(
	.param .u64 _Z12copy_columnsPfS_ii_param_0,
	.param .u64 _Z12copy_columnsPfS_ii_param_1,
	.param .u32 _Z12copy_columnsPfS_ii_param_2,
	.param .u32 _Z12copy_columnsPfS_ii_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [_Z12copy_columnsPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z12copy_columnsPfS_ii_param_1];
	ld.param.u32 	%r4, [_Z12copy_columnsPfS_ii_param_2];
	ld.param.u32 	%r3, [_Z12copy_columnsPfS_ii_param_3];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.lt.s32	%p1, %r1, %r4;
	setp.lt.s32	%p2, %r2, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB2_2;
	bra.uni 	BB2_1;

BB2_1:
	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r11, %r1, %r3, %r2;
	mul.wide.s32 	%rd4, %r11, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;

BB2_2:
	ret;
}

	// .globl	_Z37read_coaleased_write_stride_mat_transPfS_ii
.visible .entry _Z37read_coaleased_write_stride_mat_transPfS_ii(
	.param .u64 _Z37read_coaleased_write_stride_mat_transPfS_ii_param_0,
	.param .u64 _Z37read_coaleased_write_stride_mat_transPfS_ii_param_1,
	.param .u32 _Z37read_coaleased_write_stride_mat_transPfS_ii_param_2,
	.param .u32 _Z37read_coaleased_write_stride_mat_transPfS_ii_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z37read_coaleased_write_stride_mat_transPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z37read_coaleased_write_stride_mat_transPfS_ii_param_1];
	ld.param.u32 	%r3, [_Z37read_coaleased_write_stride_mat_transPfS_ii_param_2];
	ld.param.u32 	%r4, [_Z37read_coaleased_write_stride_mat_transPfS_ii_param_3];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.lt.s32	%p1, %r1, %r3;
	setp.lt.s32	%p2, %r2, %r4;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB3_2;
	bra.uni 	BB3_1;

BB3_1:
	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r11, %r2, %r3, %r1;
	mul.wide.s32 	%rd4, %r11, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mad.lo.s32 	%r12, %r1, %r4, %r2;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r12, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

BB3_2:
	ret;
}

	// .globl	_Z37read_stride_write_coaleased_mat_transPfS_ii
.visible .entry _Z37read_stride_write_coaleased_mat_transPfS_ii(
	.param .u64 _Z37read_stride_write_coaleased_mat_transPfS_ii_param_0,
	.param .u64 _Z37read_stride_write_coaleased_mat_transPfS_ii_param_1,
	.param .u32 _Z37read_stride_write_coaleased_mat_transPfS_ii_param_2,
	.param .u32 _Z37read_stride_write_coaleased_mat_transPfS_ii_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z37read_stride_write_coaleased_mat_transPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z37read_stride_write_coaleased_mat_transPfS_ii_param_1];
	ld.param.u32 	%r3, [_Z37read_stride_write_coaleased_mat_transPfS_ii_param_2];
	ld.param.u32 	%r4, [_Z37read_stride_write_coaleased_mat_transPfS_ii_param_3];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.lt.s32	%p1, %r1, %r3;
	setp.lt.s32	%p2, %r2, %r4;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB4_2;
	bra.uni 	BB4_1;

BB4_1:
	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r11, %r1, %r4, %r2;
	mul.wide.s32 	%rd4, %r11, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mad.lo.s32 	%r12, %r2, %r3, %r1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r12, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

BB4_2:
	ret;
}


